name: Build and Push Necesse Server

on:
  workflow_dispatch:
    inputs:
      server_url:
        description: 'URL to Necesse Linux server binaries (zip file)'
        required: true
        type: string
      image_tags:
        description: 'Docker image tags (comma-separated, e.g., latest,v1.0.0,stable)'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/necesse-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Prepare Docker tags
        id: tags
        run: |
          TAGS_INPUT="${{ inputs.image_tags }}"
          TAGS_OUTPUT=""
          
          IFS=',' read -ra TAGS <<< "$TAGS_INPUT"
          for tag in "${TAGS[@]}"; do
            tag=$(echo "$tag" | xargs)
            if [ -n "$tag" ]; then
              if [ -z "$TAGS_OUTPUT" ]; then
                TAGS_OUTPUT="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag}"
              else
                TAGS_OUTPUT="${TAGS_OUTPUT},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag}"
              fi
            fi
          done
          
          echo "tags=${TAGS_OUTPUT}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            SERVER_URL=${{ inputs.server_url }}
          tags: ${{ steps.tags.outputs.tags }}

      - name: Image details
        run: |
          echo "### Docker Image Built Successfully! ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** \`linux/amd64, linux/arm64\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** \`${{ inputs.image_tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Server URL:** \`${{ inputs.server_url }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Run the server with:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker run -it --rm \\" >> $GITHUB_STEP_SUMMARY
          echo "  -p 14159:14159/tcp \\" >> $GITHUB_STEP_SUMMARY
          echo "  -p 14159:14159/udp \\" >> $GITHUB_STEP_SUMMARY
          echo "  -v ./necesse-worlds:/root/.config/Necesse/saves/worlds \\" >> $GITHUB_STEP_SUMMARY
          FIRST_TAG=$(echo "${{ inputs.image_tags }}" | cut -d',' -f1 | xargs)
          echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${FIRST_TAG}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
